# Expires map
# Turn off caching for html, css
# Leave caching for images
map $sent_http_content_type $expires {
    default                    off;
    text/html                  epoch;
    text/css                   epoch;
    application/javascript     epoch;
    ~image/                    max;
}

# Default www subdomain server
# Currently not used for Ryukyu Social
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name www.cleverword.com;

    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# Forward http to https for ryukyu-social subdomain
# For example, if the user types http://ryukyu-social.cleverword.com it will redirect to https://ryukyu-so....
server {
    listen 80;
    listen [::]:80;
    server_name ryukyu-social.cleverword.com;
    return 301 https://$server_name$request_uri;
}

# Forward http to https for ryukyu-social-dev subdomain
server {
    listen 80;
    listen [::]:80;
    server_name ryukyu-social-dev.cleverword.com;
    return 301 https://$server_name$request_uri;
}

# Forward http to https for ryukyu-social-ui subdomain
server {
    listen 80;
    listen [::]:80;
    server_name ryukyu-social-ui.cleverword.com;
    return 301 https://$server_name$request_uri;
}

# Forward http to https for ryukyu-social-ui-devsubdomain
server {
    listen 80;
    listen [::]:80;
    server_name ryukyu-social-ui-dev.cleverword.com;
    return 301 https://$server_name$request_uri;
}

# HTTPs server setup for production frontend
server {
   # SSL configuration

   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   expires $expires;

   # snippets is folder located in /etc/nginx
   # create symbolic links (.conf files) pointing to your ssl certificates
   include snippets/ssl-ryukyu-social-ui.cleverword.com.conf;
   include snippets/ssl-params.conf;

   server_name ryukyu-social-ui.cleverword.com;

   root /home/riv/frontend/ryukyu_social_ui_prod;

   index index.html;

   location ~ /.well-known {
        allow all;
   }

   # Special setup for Angular JS apps, one page app setup
   location / {
	try_files $uri $uri/ /index.html;
   }
}

# HTTPs server setup for development frontend
server {
   # SSL configuration

   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   expires $expires;

   include snippets/ssl-ryukyu-social-ui-dev.cleverword.com.conf;
   include snippets/ssl-params.conf;

   server_name ryukyu-social-ui-dev.cleverword.com;

   root /home/riv/frontend/ryukyu_social_ui_dev;

   index index.html;

   location ~ /.well-known {
        allow all;
   }

   location / {
        try_files $uri $uri/ /index.html;
   }
}

# HTTPs server setup for production backend
server {
   # SSL configuration

   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   expires $expires;

   include snippets/ssl-ryukyu-social.cleverword.com.conf;
   include snippets/ssl-params.conf;

   server_name ryukyu-social.cleverword.com;

   # This is the test/admin frontend, not to be confused with the Ryukyu UI
   # Not really needed..
   root /home/riv/frontend/ryukyu_social_frontend;

   index index.html;

   location ~ /.well-known {
   	allow all;
   }

   location / {
	autoindex on;
	auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
   }

   # Forwarding to the correct NodeJS app in the backend
   location /users_service/api {
        rewrite /users_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   # For test frontend, single page app angularjs
   location /users_service {
	try_files $uri $uri/ /users_service/index.html;
   }

   location /user_photos_service/api {
        rewrite /user_photos_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /user_photos_service {
	try_files $uri $uri/ /user_photos_service/index.html;
   }

   location /projects_service/api {
	rewrite /projects_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /projects_service {
        try_files $uri $uri/ /projects_service/index.html;
   }

   location /tasks_service/api {
        rewrite /tasks_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5003;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /project_photos_service/api {
        rewrite /project_photos_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5004;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /user_profile_service/api {
        rewrite /user_profile_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5005;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /files_service/api {
        rewrite /files_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5006;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /code_checker_service/api {
        rewrite /code_checker_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:5100;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /simple_tasks_service {
        try_files $uri $uri/ /simple_tasks_service/index.html;
   }

   location /slack_task_puller_service/api {
        rewrite /slack_task_puller_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:4567;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /chatwork_task_puller_service/api {
        rewrite /chatwork_task_puller_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:4568;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /docker_registry {
        proxy_pass http://127.0.0.1:8008;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }
}

# HTTPs server setup for development backend
server {
   # SSL configuration

   listen 443 ssl http2;
   listen [::]:443 ssl http2;

   expires $expires;

   include snippets/ssl-ryukyu-social-dev.cleverword.com.conf;
   include snippets/ssl-params.conf;

   server_name ryukyu-social-dev.cleverword.com;

   # Development test UI, not to be confused with actual Ryukyu UI
   root /home/riv/frontend/ryukyu_social_frontend_dev;

   index index.html;

   location ~ /.well-known {
        allow all;
   }

   location / {
        autoindex on;
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
   }

   location /users_service/api {
        rewrite /users_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /user_photos_service/api {
        rewrite /user_photos_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /projects_service/api {
        rewrite /projects_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /tasks_service/api {
        rewrite /tasks_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8003;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        #proxy_cache_bypass $http_upgrade;
   }

   location /project_photos_service/api {
        rewrite /project_photos_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8004;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /user_profile_service/api {
        rewrite /user_profile_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8005;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /files_service/api {
        rewrite /files_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8006;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

   location /code_checker_service/api {
        rewrite /code_checker_service/api/(.*) /$1  break;
        proxy_pass http://127.0.0.1:8100;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
   }

}
